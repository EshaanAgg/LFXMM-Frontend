---
export const prerender = true;

import { marked } from "marked";
import Layout from "../../layouts/Layout.astro";
import { getFormattedSkillName } from "../../utilities/skillUtilities";

// Get all the organization IDs and render the page for them
export async function getStaticPaths() {
  const API_BASE_URL = import.meta.env.API_BASE_URL;

  const projectResponse = await fetch(`${API_BASE_URL}/projects/`);
  const projData = await projectResponse.json();

  return projData.map((proj: ProjectThumbnail) => ({
    params: {
      projID: proj.id,
    },
  }));
}

// Render the content of the page by making the relevant requests
const { projID } = Astro.params;

const API_BASE_URL = import.meta.env.API_BASE_URL;
const projResponse = await fetch(`${API_BASE_URL}/projects/${projID}`);
const projData = (await projResponse.json()).project;

const descriptionHTMLContent = marked.parse(projData.description);
---

<Layout title={projData.name}>
  <div class="flex flex-col justify-center">
    <h1
      class="text-white text-center text-4xl lg:text-5xl font-semibold pt-8 pb-6 max-w-5xl mx-auto p-6"
    >
      {projData.name}
    </h1>

    <div>
      <h4 class="text-white text-center text-2xl font-semibold pt-4 pb-2">
        Description
      </h4>
      <div
        class="text-white text-md max-w-5xl mx-auto opacity-90 p-8"
        set:html={descriptionHTMLContent}
      />
    </div>

    <div class="codeBlock absolute"></div>

    {/* Skills */}
    {
      projData.skills.length !== 0 && (
        <div class="flex flex-col mx-auto">
          <h4 class="text-white text-center font-semibold mx-auto text-2xl pb-2 pt-4">
            Required Skills
          </h4>
          <div class="flex flex-wrap justify-center gap-[10px] pt-2">
            {projData.skills
              .filter((skill: string) => skill != "")
              .map((skill: string) => (
                <button class="inline-flex items-center px-3 py-1 text-sm font-medium text-center text-white bg-highlight-blue rounded-3xl">
                  {getFormattedSkillName(skill)}
                </button>
              ))}
          </div>
        </div>
      )
    }

    {/* Different buttons */}
    <div class="mx-auto pt-6">
      <a href={projData.lfxProjectUrl} target="_blank">
        <button
          type="button"
          class="viewDetail inline-flex items-center px-4 py-2 pb-6 text-sm font-medium text-center text-white bg-dark-blue hover:bg-white hover:text-dark-blue hover:border-highlight-blue"
        >
          View Project on LFX
        </button>
      </a>
    </div>
  </div>
</Layout>
