---
export const prerender = true;

import Layout from "../../layouts/Layout.astro";
import { ProjectNavbar } from "../../components/organization/ProjectNavbar";



interface ProjectDescription {
  projectId: string;
  lfid: string;
  status: "In Progress" | "Completed";
  industry: string;
  description: string;
  repolink: string;
  skills: string[];
  amountRaised: number;
}

// Get all the organization IDs and render the page for them
export async function getStaticPaths() {
  const API_BASE_URL = import.meta.env.API_BASE_URL;
  const response = await fetch(`${API_BASE_URL}/orgs`);
  const allOrganizations = await response.json();
  const response1 = await fetch(`${API_BASE_URL}/projectdesc`);
  const allProject = await response1.json();

  return allOrganizations.map((org: Organization) => ({
    params: {
      orgID: org.id,
    },
  }),
  allProject.map((project: ProjectDescription) => ({
    params: {
      projID: project.projectId,
    },
  })));
}

// Render the content of the page by making the relevant requests
const { orgID } = Astro.params;
const { projID } = Astro.params;

const API_BASE_URL = import.meta.env.API_BASE_URL;

const projectResponse = await fetch(`${API_BASE_URL}/orgs/${orgID}/projects/${projID}`);
const projectData = (await projectResponse.json());
---

<Layout title={projectData.name}>
  <div class="mainPage">
    <div class="upperSection">

      <div class="orgInfo">
        <div class="orgAbout">
          <p>
            {projectData.description}
          </p>
        </div>
        <div class="graph">Display the Graph</div>
      </div>
    </div>
  </div>
</Layout>

<style is:global>
  body {
    background: #00101b;
  }

  .mainPage {
    color: white;
    height: fit-content;
    padding: 0vh 8vw;
  }

  .upperSection {
    margin-top: 20vh;
    display: flex;
    flex-direction: column;
    height: 70vh;
  }

  .orgInfo {
    width: 100%;
    display: flex;
  }

  .orgLogo {
    height: 15vh;
    margin: 0vh 0vw 10vh 0vw;
  }

  .orgAbout {
    display: flex;
    gap: 20px;
    flex-direction: column;
    font-family: Lato;
    font-size: 18px;
    font-weight: 400;
    line-height: 20px;
    letter-spacing: 0em;
    text-align: justified;
  }

  .graph {
    display: flex;
    width: 40%;
    justify-content: center;
    align-items: center;
  }

  .pastYears {
    width: 100%;
    display: flex;
    justify-content: center;
    font-family: Lato;
    font-size: 60px;
    font-weight: 700;
    line-height: 72px;
    letter-spacing: 0em;
    margin-bottom: 6vh;
    color: white;
  }

  .lowerSection {
    width: 100%;
    padding: 0vh 1vw;
    display: flex;
    flex-wrap: wrap;
    gap: 2vh;
    justify-content: center;
    background-color: rgb(16, 16, 16);
  }
  .codeBlock {
    position: absolute;
    width: 300px;
    height: 300px;
    left: calc(50% - 150px / 2 - 78px);
    top: calc(50% - 150.05px / 2 - 47.47px);
    border-radius: 100%;
    background: linear-gradient(
      118.19deg,
      #02101a -3.62%,
      hsl(210, 94%, 21%) 55.44%,
      #0077cc 110.51%
    );
    opacity: 0.2;
    filter: blur(34px);
    transform: matrix(1, 0, -0.03, 1, 0, 0);
  }
</style>
