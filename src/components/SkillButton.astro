---
interface Props {
  skillName: string;
  frequency: string;
  isSelected: boolean;
}

const { skillName, frequency, isSelected } = Astro.props;

// Define a variable to track if any skill is selected
let anySkillSelected = false;

// Update the anySkillSelected variable whenever isSelected changes
$: {
  anySkillSelected = isSelected || anySkillSelected;
}
---

<div>
  <!-- SkillButton.astro.tsx -->
  <li class="w-full border-b rounded-t-lg border-gray-600">
    <input
      id={`skill-checkbox-${skillName}`}
      type="checkbox"
      class="w-4 h-4 text-blue-600 rounded focus:ring-blue-600 ring-offset-gray-700 focus:ring-offset-gray-700 focus:ring-2 bg-gray-600 border-gray-500"
      checked={isSelected}
      onchange="handleCheckboxChange(this)"
    />
    <label
      for={`skill-checkbox-${skillName}`}
      class="w-full py-3 ml-2 text-sm font-medium text-gray-300"
    >
      <span class="flex-1">{skillName}</span>
      <span
        class="inline-flex items-center justify-center px-2 ml-3 text-sm font-medium rounded-full bg-gray-400 text-white"
      >
        {frequency}
      </span>
    </label>
  </li>
</div>

<script lang="ts">
  function handleCheckboxChange(checkbox) {
    isSelected = checkbox.checked;
    divId = checkbox.id;
    console.log(isSelected, divId);
  }
</script>
