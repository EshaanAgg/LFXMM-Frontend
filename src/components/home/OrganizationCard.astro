---
interface Props {
  name: string;
  logoUrl: string;
  id: string;
  description: string;
  skills: string[];
}

const { id, name, logoUrl, skills } = Astro.props;

const MAX_DESCRIPTION_LENGTH = 180;

const filteredSkills = skills
  ? skills.filter((skill) => skill !== "").slice(0, 6)
  : [];

const description =
  "CNCF is the open source, vendor-neutral hub of cloud native computing, hosting projects....";
---

<div
  class="box lg:w-[360px] sm:w-[360px] rounded-3xl bg-dark-blue mx-3 my-2 py-auto border-[3px] border-highlight-blue card hover:border-[5px] flex flex-col justify-center align-center overflow-hidden text-white"
>
  <div class="flex flex-col justify-center items-center p-4 gap-5 mx-auto">
    <!-- Logo -->
    <div class="flex justify-center items-center">
      <img
        class="w-24 h-24 mb-3 rounded-full border-solid border-2 border-white"
        src={logoUrl}
        alt={`Logo for the organization ${name}`}
      />
    </div>

    <!-- Name of the organization -->
    <h5 class="m-1 text-xl font-semibold leading-6 text-center text-white">
      {name}
    </h5>

    <!-- Description -->
    <div>
      <p class="text-fade-grey text-sm text-center pt-[10px]">
        {
          description.length > MAX_DESCRIPTION_LENGTH
            ? description.substring(0, MAX_DESCRIPTION_LENGTH) + "..."
            : description
        }
      </p>
    </div>

    <!-- Skills -->
    {
      filteredSkills.length > 0 && (
        <div class="flex flex-col mx-auto pl-5">
          <h2 class="text-white">Required Skills</h2>
          <div class="flex flex-wrap items-center justify-self-center gap-[10px] pt-2">
            {filteredSkills.map((skill) => (
              <button class="inline-flex items-center px-3 py-1 text-sm font-medium text-center text-white bg-highlight-blue rounded-3xl">
                {skill}
              </button>
            ))}
          </div>
        </div>
      )
    }

    <!-- Link to Organization page -->
    <div class="flex space-x-3">
      <a
        href=`/org/${id}`
        class="viewDetail inline-flex items-center px-4 py-2 pb-6 text-sm font-medium text-center text-white bg-dark-blue hover:bg-white hover:text-dark-blue hover:border-highlight-blue"
        >View in Detail</a
      >
    </div>
  </div>
</div>

<style is:global>
  .card {
    transition-duration: 0.125s;
    background: rgba(255, 255, 255, 0.04);
    border-radius: 16px;
    box-shadow: 0 4px 15px rgba(50, 113, 113);
    border: 2px solid #07c e7;
    z-index: 2;
  }

  .card:hover {
    transform: scale(1.01);
    box-shadow: 0 0 10px rgba(69, 193, 255, 0.589);
    border: 3px solid #fff;
  }

  .viewDetail {
    transition-duration: 0.3s;
  }

  .viewDetail:hover {
    transform: scale(1.05);
    color: rgb(3 105 161);
  }

  .viewDetail {
    --clr: #fff;
    --outline: 2px solid var(--clr);
    color: var(--clr);
    outline: var(--outline);
    border: var(--outline);
    outline-offset: -2px;
    transition: outline-offset 200ms;
    border-radius: 20px;
    padding: 8px;
  }

  .viewDetail:hover,
  .viewDetail:focus {
    outline: var(--outline);
    outline-offset: 2px;
  }
</style>
